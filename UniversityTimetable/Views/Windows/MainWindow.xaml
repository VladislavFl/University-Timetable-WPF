<Window x:Class="UniversityTimetable.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:UniversityTimetable.ViewModels"
        xmlns:local="clr-namespace:UniversityTimetable"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14" WindowStyle="None"
        FontFamily="{materialDesign:MaterialDesignFont}"
        Title="{Binding Title}" Height="700" Width="1200">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding MainWindowLoadedCommand}" CommandParameter="{Binding ElementName=Btn1}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="5">

        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="20 0">
                <Label Content="Группа:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 5 0"/>
                <ComboBox ItemsSource="{Binding GroupItems}" SelectedItem="{Binding CurrentGroup, UpdateSourceTrigger=PropertyChanged}" FontSize="15" Width="100" Foreground="#FFA2A2A2" SelectedIndex="0" VerticalAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding GroupComboboxLoadedCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding GroupComboboxSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Label Content="Период:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 5 0"/>
                <DatePicker Width="100" HorizontalAlignment="Right" SelectedDate="{Binding SelectedMonday}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedDateChanged">
                            <i:InvokeCommandAction Command="{Binding CalendarSelectedDateChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DatePicker>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="20 0">
                <Button Content="Расписание" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FFA2A2A2" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                <Button Content="Учебная нагрузка" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FFA2A2A2" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                <Button Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                            Command="{Binding CloseApplicationCommand}">
                    <materialDesign:PackIcon Kind="Power" Foreground="#FFA2A2A2" Width="25" Height="25" />
                </Button>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="10 0" Grid.ColumnSpan="2">
                <Button x:Name="Btn1" Uid="1" Width="150" Content="ПОНЕДЕЛЬНИК" Height="50" Background="RoyalBlue" BorderBrush="{x:Null}" Foreground="White">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding WeekDayClickCommand}" CommandParameter="{Binding ElementName=Btn1}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Azure"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="Btn2" Uid="2" Width="150" Content="ВТОРНИК" Height="50" BorderBrush="{x:Null}" Foreground="#FF2196F3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding WeekDayClickCommand}" CommandParameter="{Binding ElementName=Btn2}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Azure"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="Btn3" Uid="3" Width="150" Content="СРЕДА" Height="50" BorderBrush="{x:Null}" Foreground="#FF2196F3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding WeekDayClickCommand}" CommandParameter="{Binding ElementName=Btn3}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Azure"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="Btn4" Uid="4" Width="150" Content="ЧЕТВЕРГ" Height="50" BorderBrush="{x:Null}" Foreground="#FF2196F3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding WeekDayClickCommand}" CommandParameter="{Binding ElementName=Btn4}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Azure"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="Btn5" Uid="5" Width="150" Content="ПЯТНИЦА" Height="50" BorderBrush="{x:Null}" Foreground="#FF2196F3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding WeekDayClickCommand}" CommandParameter="{Binding ElementName=Btn5}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Azure"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="Btn6" Uid="6" Width="150" Content="СУББОТА" Height="50" BorderBrush="{x:Null}" Foreground="#FF2196F3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding WeekDayClickCommand}" CommandParameter="{Binding ElementName=Btn6}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Azure"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>

        <!-- таблица расписания -->
        <Grid Grid.Row="2" x:Name="GridMain">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <DataGrid Grid.Column="0" ItemsSource="{Binding LessonsTimeItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AutoGenerateColumns="False"
                      CanUserAddRows="False" CanUserSortColumns="False" IsReadOnly="True">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding LessonsTimeDataGridLoadedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="№" Width="70" Binding="{Binding NumLesson, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Время занятий" Width="150" Binding="{Binding Time, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Группа" Width="100" Binding="{Binding GroupName, UpdateSourceTrigger=PropertyChanged}"/>
                </DataGrid.Columns>
            </DataGrid>

            <DataGrid x:Name="TimetableDataGrid" Grid.Column="1" ItemsSource="{Binding TimetableItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AutoGenerateColumns="False"
                      CanUserAddRows="False" CanUserSortColumns="False">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding TimetableDataGridLoadedCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="RowEditEnding">
                        <i:InvokeCommandAction Command="{Binding TimetableDataGridRowEditEndingCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Id, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                    <DataGridTextColumn Header="Дисциплина" Width="200" Binding="{Binding Subject, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"/>
                    <DataGridTextColumn Header="Преподаватель" Width="150" Binding="{Binding Teacher, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"/>
                    <DataGridTextColumn Header="Аудитория" Width="100" Binding="{Binding Classroom, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Grid.Row="3">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Button Content="Импорт в Excel" Margin="5 0 5 0"></Button>
                <Button Content="Экспорт из Excel" Margin="5 0 5 0"></Button>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="4">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Label Content="Свободные аудитории:" Margin="5 0 5 0" VerticalAlignment="Center"/>
                <TextBox AcceptsReturn="True" TextWrapping="Wrap" IsReadOnly="True" Text="{Binding ClassroomsItems, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </StackPanel>
        </Grid>

    </Grid>
</Window>
